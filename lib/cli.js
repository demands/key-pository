// Generated by CoffeeScript 1.7.1
(function() {
  var COLLABORATORS, COMMIT, Heroku, fibrous;

  fibrous = require('fibrous');

  Heroku = require('heroku-client');

  COMMIT = false;

  COLLABORATORS = ['admin@goodeggsinc.com', 'aaron@goodeggs.com', 'adam@hmlad.com', 'alex@goodeggs.com', 'alon@salant.org', 'bob@zoller.us', 'brian@goodeggs.com', 'brianu@goodeggs.com', 'deploy@goodeggsinc.com', 'joe@goodeggs.com', 'lei@goodeggs.com', 'max@goodeggs.com', 'randypuro@gmail.com', 'rob@goodeggsinc.com', 'sherman.mui@goodeggs.com'];

  fibrous.run(function() {
    var app, collaborator, email, hash, heroku, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _results;
    heroku = new Heroku({
      token: process.env.HEROKU_API_TOKEN
    });
    _ref = heroku.apps().sync.list();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      app = _ref[_i];
      console.log(app.name);
      app = heroku.apps(app.name);
      hash = {};
      for (_j = 0, _len1 = COLLABORATORS.length; _j < _len1; _j++) {
        email = COLLABORATORS[_j];
        hash[email] = 1;
      }
      _ref1 = app.collaborators().sync.list();
      for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
        collaborator = _ref1[_k];
        if (hash[collaborator.user.email] != null) {
          console.log("    " + collaborator.user.email);
          delete hash[collaborator.user.email];
        } else {
          console.log("  - " + collaborator.user.email);
          if (COMMIT) {
            app.collaborators(collaborator.user.email).sync["delete"]();
          }
        }
      }
      _results.push((function() {
        var _results1;
        _results1 = [];
        for (email in hash) {
          console.log("  + " + email);
          if (COMMIT) {
            _results1.push(app.collaborators().sync.create({
              user: {
                email: email
              }
            }));
          } else {
            _results1.push(void 0);
          }
        }
        return _results1;
      })());
    }
    return _results;
  });

}).call(this);
